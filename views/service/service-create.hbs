<form class="service-form needs-validation" action="/service/create" method="POST" enctype="multipart/form-data">
    <div class="mb-3">
        <h1>Create your service</h1>
        <label for="description-input" class="form-label">Description</label>
        <textarea type="textarea" rows="8" class="form-control" id="description-input" name="description"></textarea>
    </div>
    <div class="mb-3">
        <label for="price-input" class="form-label">Price</label>
        <input type="number" class="form-control" id="price-input" name="price">
    </div>
    <div class="mb-3">
        <label for="category-input" class="form-label">Category</label>
        <select id="category-input" class="form-select" name="category">
            {{#each categories}}
            <option>{{name}}</option>
            {{/each}}
        </select>
    </div>
    <!--todo: Implement mapbox for getting location-->
    <div class="mb-3">
        <label for="location-input" class="form-label">Location</label>
        <input type="text" class="form-control" id="location-input" name="location">
        <div id="geocoder" class="geocoder"></div>
    </div>
    <div class="mb-3">
        <label for="file-input" class="form-label">Service image</label>
        <input class="form-control" type="file" id="file-input" name="image">
    </div>
    <button type="submit" class="button">Submit</button>
</form>

<script>
    mapboxgl.accessToken = 'pk.eyJ1Ijoic2lsaW5kZTg3IiwiYSI6ImNrbnc4MnYxZDBkdW4yb3RndWFrb3ByengifQ.3sbtlgTOx_O-KQVbvwKxow';

    let geocoder = new MapboxGeocoder({
        accessToken: mapboxgl.accessToken,
        mapboxgl: mapboxgl
    });
    geocoder.addTo('#geocoder');
    let coordinates;

    // Get the location-input element.
    let locationInput = document.getElementById('location-input');

    // Add geocoder result to location element's input.
    geocoder.on('result', function (e) {
        coordinates = e.result.geometry.coordinates;
        locationInput.value = coordinates;
        console.log(locationInput.value);
    });

    // Clear reasult coordinates and location element's input when search is cleared.
    geocoder.on('clear', function () {
        coordinates = undefined;
        locationInput.value = '';
    });

</script>